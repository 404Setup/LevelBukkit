From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: 404Setup <153366651+404Setup@users.noreply.github.com>
Date: Fri, 31 May 2024 18:44:44 +0800
Subject: [PATCH] Divine: lithium: ai.raid

This patch is based on the following mixin:
"me/jellysquid/mods/lithium/mixin/ai/raid/RaidMixin.java"
By: Angeline <jellysquid3@users.noreply.github.com>
As part of: Lithium (https://github.com/CaffeineMC/lithium-fabric)
Licensed under: LGPL-3.0 (https://www.gnu.org/licenses/lgpl-3.0.html)

diff --git a/src/main/java/net/minecraft/world/entity/raid/Raid.java b/src/main/java/net/minecraft/world/entity/raid/Raid.java
index 488ff78fd704b8a87b7012c3c4f66814dff97e1b..284352fcf80de6c997ad0502e3898e8d6dc8558d 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raid.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raid.java
@@ -106,6 +106,7 @@ public class Raid {
     private Raid.RaidStatus status;
     private int celebrationTicks;
     private Optional<BlockPos> waveSpawnPos;
+    private boolean isBarDirty; // DivineMC - lithium: ai.raid
     // Paper start
     private static final String PDC_NBT_KEY = "BukkitValues";
     private static final org.bukkit.craftbukkit.persistence.CraftPersistentDataTypeRegistry PDC_TYPE_REGISTRY = new org.bukkit.craftbukkit.persistence.CraftPersistentDataTypeRegistry();
@@ -153,11 +154,8 @@ public class Raid {
         this.heroesOfTheVillage.clear();
         if (nbt.contains("HeroesOfTheVillage", 9)) {
             ListTag nbttaglist = nbt.getList("HeroesOfTheVillage", 11);
-            Iterator iterator = nbttaglist.iterator();
-
-            while (iterator.hasNext()) {
-                Tag nbtbase = (Tag) iterator.next();
 
+            for (Tag nbtbase : nbttaglist) {
                 this.heroesOfTheVillage.add(NbtUtils.loadUUID(nbtbase));
             }
         }
@@ -205,12 +203,9 @@ public class Raid {
 
     public Set<Raider> getAllRaiders() {
         Set<Raider> set = Sets.newHashSet();
-        Iterator iterator = this.groupRaiderMap.values().iterator();
-
-        while (iterator.hasNext()) {
-            Set<Raider> set1 = (Set) iterator.next();
 
-            set.addAll(set1);
+        for (Set<Raider> raiders : this.groupRaiderMap.values()) {
+            set.addAll(raiders);
         }
 
         return set;
@@ -239,12 +234,12 @@ public class Raid {
     private void updatePlayers() {
         Set<ServerPlayer> set = Sets.newHashSet(this.raidEvent.getPlayers());
         List<ServerPlayer> list = this.level.getPlayers(this.validPlayer());
-        Iterator iterator = list.iterator();
+        Iterator<ServerPlayer> iterator = list.iterator();
 
         ServerPlayer entityplayer;
 
         while (iterator.hasNext()) {
-            entityplayer = (ServerPlayer) iterator.next();
+            entityplayer = iterator.next();
             if (!set.contains(entityplayer)) {
                 this.raidEvent.addPlayer(entityplayer);
             }
@@ -253,7 +248,7 @@ public class Raid {
         iterator = set.iterator();
 
         while (iterator.hasNext()) {
-            entityplayer = (ServerPlayer) iterator.next();
+            entityplayer = iterator.next();
             if (!list.contains(entityplayer)) {
                 this.raidEvent.removePlayer(entityplayer);
             }
@@ -290,6 +285,12 @@ public class Raid {
 
     public void tick() {
         if (!this.isStopped()) {
+            // DivineMC start - lithium: ai.raid
+            if (this.isBarDirty) {
+                this.updateBossbarInternal();
+                this.isBarDirty = false;
+            }
+            // DivineMC end
             if (this.status == Raid.RaidStatus.ONGOING) {
                 boolean flag = this.active;
 
@@ -416,14 +417,10 @@ public class Raid {
                             UUID uuid = (UUID) iterator.next();
                             Entity entity = this.level.getEntity(uuid);
 
-                            if (entity instanceof LivingEntity) {
-                                LivingEntity entityliving = (LivingEntity) entity;
-
+                            if (entity instanceof LivingEntity entityliving) {
                                 if (!entity.isSpectator()) {
                                     //entityliving.addEffect(new MobEffectInstance(MobEffects.HERO_OF_THE_VILLAGE, 48000, this.badOmenLevel - 1, false, false, true)); // Folia - Fix off region raid heroes - move down
-                                    if (entityliving instanceof ServerPlayer) {
-                                        ServerPlayer entityplayer = (ServerPlayer) entityliving;
-
+                                    if (entityliving instanceof ServerPlayer entityplayer) {
                                         // Folia start - Fix off region raid heroes - moved down
                                         winners.add(entityplayer.getBukkitEntity()); // CraftBukkit
                                     }
@@ -514,11 +511,9 @@ public class Raid {
         HashSet hashset = Sets.newHashSet();
 
         while (iterator.hasNext()) {
-            Set<Raider> set = (Set) iterator.next();
-            Iterator iterator1 = set.iterator();
+            Set<Raider> set = iterator.next();
 
-            while (iterator1.hasNext()) {
-                Raider entityraider = (Raider) iterator1.next();
+            for (Raider entityraider : set) {
                 BlockPos blockposition = entityraider.blockPosition();
 
                 if (!entityraider.isRemoved() && entityraider.level().dimension() == this.level.dimension() && this.center.distSqr(blockposition) < 12544.0D) {
@@ -541,10 +536,8 @@ public class Raid {
             }
         }
 
-        Iterator iterator2 = hashset.iterator();
-
-        while (iterator2.hasNext()) {
-            Raider entityraider1 = (Raider) iterator2.next();
+        for (Object o : hashset) {
+            Raider entityraider1 = (Raider) o;
 
             this.removeFromRaid(entityraider1, true);
         }
@@ -556,10 +549,9 @@ public class Raid {
         boolean flag = true;
         Collection<ServerPlayer> collection = this.raidEvent.getPlayers();
         long i = this.random.nextLong();
-        Iterator iterator = this.level.getLocalPlayers().iterator(); // Folia - region threading
+        // Folia - region threading
 
-        while (iterator.hasNext()) {
-            ServerPlayer entityplayer = (ServerPlayer) iterator.next();
+        for (ServerPlayer entityplayer : this.level.getLocalPlayers()) {
             Vec3 vec3d = entityplayer.position();
             Vec3 vec3d1 = Vec3.atCenterOf(pos);
             double d0 = Math.sqrt((vec3d1.x - vec3d.x) * (vec3d1.x - vec3d.x) + (vec3d1.z - vec3d.z) * (vec3d1.z - vec3d.z));
@@ -666,21 +658,23 @@ public class Raid {
 
     }
 
+    // DivineMC start - lithium: ai.raid
     public void updateBossbar() {
+        this.isBarDirty = true;
+    }
+
+    private void updateBossbarInternal() {
         this.raidEvent.setProgress(Mth.clamp(this.getHealthOfLivingRaiders() / this.totalHealth, 0.0F, 1.0F));
     }
+    // DivineMC end
 
     public float getHealthOfLivingRaiders() {
         float f = 0.0F;
-        Iterator iterator = this.groupRaiderMap.values().iterator();
-
-        while (iterator.hasNext()) {
-            Set<Raider> set = (Set) iterator.next();
 
+        for (Set<Raider> raiders : this.groupRaiderMap.values()) {
             Raider entityraider;
-
-            for (Iterator iterator1 = set.iterator(); iterator1.hasNext(); f += entityraider.getHealth()) {
-                entityraider = (Raider) iterator1.next();
+            for (Iterator<Raider> iterator1 = raiders.iterator(); iterator1.hasNext(); f += entityraider.getHealth()) {
+                entityraider = iterator1.next();
             }
         }
 
@@ -769,11 +763,8 @@ public class Raid {
         });
         Set<Raider> set = (Set) this.groupRaiderMap.get(wave);
         Raider entityraider1 = null;
-        Iterator iterator = set.iterator();
-
-        while (iterator.hasNext()) {
-            Raider entityraider2 = (Raider) iterator.next();
 
+        for (Raider entityraider2 : set) {
             if (entityraider2.getUUID().equals(entity.getUUID())) {
                 entityraider1 = entityraider2;
                 break;
@@ -875,11 +866,8 @@ public class Raid {
         nbt.putInt("CY", this.center.getY());
         nbt.putInt("CZ", this.center.getZ());
         ListTag nbttaglist = new ListTag();
-        Iterator iterator = this.heroesOfTheVillage.iterator();
-
-        while (iterator.hasNext()) {
-            UUID uuid = (UUID) iterator.next();
 
+        for (UUID uuid : this.heroesOfTheVillage) {
             nbttaglist.add(NbtUtils.createUUID(uuid));
         }
 
@@ -893,16 +881,12 @@ public class Raid {
     }
 
     public int getNumGroups(Difficulty difficulty) {
-        switch (difficulty) {
-            case EASY:
-                return 3;
-            case NORMAL:
-                return 5;
-            case HARD:
-                return 7;
-            default:
-                return 0;
-        }
+        return switch (difficulty) {
+            case EASY -> 3;
+            case NORMAL -> 5;
+            case HARD -> 7;
+            default -> 0;
+        };
     }
 
     public float getEnchantOdds() {
@@ -933,9 +917,7 @@ public class Raid {
             Raid.RaidStatus[] araid_status = Raid.RaidStatus.VALUES;
             int i = araid_status.length;
 
-            for (int j = 0; j < i; ++j) {
-                Raid.RaidStatus raid_status = araid_status[j];
-
+            for (RaidStatus raid_status : araid_status) {
                 if (name.equalsIgnoreCase(raid_status.name())) {
                     return raid_status;
                 }
