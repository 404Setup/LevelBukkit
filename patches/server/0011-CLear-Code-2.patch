From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: 404Setup <153366651+404Setup@users.noreply.github.com>
Date: Thu, 30 May 2024 09:42:57 +0800
Subject: [PATCH] CLear Code 2


diff --git a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
index a82b8532017904b8a2296d945621b8e2afda4763..0c8eaaaf922349097ea337d8e24f4158559baed8 100644
--- a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -197,22 +197,20 @@ public class MapItemSavedData extends SavedData {
         Objects.requireNonNull(logger);
         dataresult.resultOrPartial(logger::error).ifPresent((nbtbase) -> nbt.put("dimension", nbtbase));
         // CraftBukkit start
-        if (true) {
-            if (this.uniqueId == null) {
-                for (org.bukkit.World world : this.server.getWorlds()) {
-                    CraftWorld cWorld = (CraftWorld) world;
-                    if (cWorld.getHandle().dimension() == this.dimension) {
-                        this.uniqueId = cWorld.getUID();
-                        break;
-                    }
+        if (this.uniqueId == null) {
+            for (org.bukkit.World world : this.server.getWorlds()) {
+                CraftWorld cWorld = (CraftWorld) world;
+                if (cWorld.getHandle().dimension() == this.dimension) {
+                    this.uniqueId = cWorld.getUID();
+                    break;
                 }
             }
+        }
             /* Perform a second check to see if a matching world was found, this is a necessary
                change incase Maps are forcefully unlinked from a World and lack a UID.*/
-            if (this.uniqueId != null) {
-                nbt.putLong("UUIDLeast", this.uniqueId.getLeastSignificantBits());
-                nbt.putLong("UUIDMost", this.uniqueId.getMostSignificantBits());
-            }
+        if (this.uniqueId != null) {
+            nbt.putLong("UUIDLeast", this.uniqueId.getLeastSignificantBits());
+            nbt.putLong("UUIDMost", this.uniqueId.getMostSignificantBits());
         }
         // CraftBukkit end
         nbt.putInt("xCenter", this.centerX);
@@ -251,7 +249,7 @@ public class MapItemSavedData extends SavedData {
     }
 
     public synchronized MapItemSavedData scaled(int zoomOutScale) { // Folia - make map data thread-safe
-        return MapItemSavedData.createFresh((double) this.centerX, (double) this.centerZ, (byte) Mth.clamp(this.scale + zoomOutScale, 0, 4), this.trackingPosition, this.unlimitedTracking, this.dimension);
+        return MapItemSavedData.createFresh(this.centerX, this.centerZ, (byte) Mth.clamp(this.scale + zoomOutScale, 0, 4), this.trackingPosition, this.unlimitedTracking, this.dimension);
     }
 
     public synchronized void tickCarriedBy(Player player, ItemStack stack) { // Folia - make map data thread-safe
@@ -268,7 +266,7 @@ public class MapItemSavedData extends SavedData {
         }
 
         for (int i = 0; i < this.carriedBy.size(); ++i) {
-            MapItemSavedData.HoldingPlayer worldmap_worldmaphumantracker1 = (MapItemSavedData.HoldingPlayer) this.carriedBy.get(i);
+            MapItemSavedData.HoldingPlayer worldmap_worldmaphumantracker1 = this.carriedBy.get(i);
             String s = worldmap_worldmaphumantracker1.player.getName().getString();
 
             if (!worldmap_worldmaphumantracker1.player.isRemoved() && (worldmap_worldmaphumantracker1.player.getInventory().contains(stack) || stack.isFramed())) {
@@ -285,7 +283,7 @@ public class MapItemSavedData extends SavedData {
         if (stack.isFramed() && this.trackingPosition) {
             ItemFrame entityitemframe = stack.getFrame();
             BlockPos blockposition = entityitemframe.getPos();
-            MapFrame worldmapframe = (MapFrame) this.frameMarkers.get(MapFrame.frameId(blockposition));
+            MapFrame worldmapframe = this.frameMarkers.get(MapFrame.frameId(blockposition));
 
             if (worldmapframe != null && entityitemframe.getId() != worldmapframe.getEntityId() && this.frameMarkers.containsKey(worldmapframe.getId())) {
                 this.removeDecoration("frame-" + worldmapframe.getEntityId());
@@ -316,7 +314,7 @@ public class MapItemSavedData extends SavedData {
     }
 
     private void removeDecoration(String id) {
-        MapDecoration mapicon = (MapDecoration) this.decorations.remove(id);
+        MapDecoration mapicon = this.decorations.remove(id);
 
         if (mapicon != null && mapicon.type().shouldTrackCount()) {
             --this.trackedDecorationCount;
@@ -339,8 +337,8 @@ public class MapItemSavedData extends SavedData {
 
         nbttagcompound.putByte("type", type.getIcon());
         nbttagcompound.putString("id", id);
-        nbttagcompound.putDouble("x", (double) pos.getX());
-        nbttagcompound.putDouble("z", (double) pos.getZ());
+        nbttagcompound.putDouble("x", pos.getX());
+        nbttagcompound.putDouble("z", pos.getZ());
         nbttagcompound.putDouble("rot", 180.0D);
         nbttaglist.add(nbttagcompound);
         if (type.hasMapColor()) {
@@ -631,7 +629,7 @@ public class MapItemSavedData extends SavedData {
 
             Collection collection;
 
-            if ((true || this.dirtyDecorations) && this.tick++ % 5 == 0) { // CraftBukkit - custom maps don't update this yet
+            if (this.tick++ % 5 == 0) { // CraftBukkit - custom maps don't update this yet
                 this.dirtyDecorations = false;
                 // CraftBukkit start
                 java.util.Collection<MapDecoration> icons = new java.util.ArrayList<>();
